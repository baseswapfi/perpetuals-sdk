/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export interface IPositionRouterInterface extends utils.Interface {
  functions: {
    "decreasePositionRequestKeys(uint256)": FunctionFragment;
    "decreasePositionRequestKeysStart()": FunctionFragment;
    "executeDecreasePositions(uint256,address)": FunctionFragment;
    "executeIncreasePositions(uint256,address)": FunctionFragment;
    "getDecreasePositionRequestPath(bytes32)": FunctionFragment;
    "getIncreasePositionRequestPath(bytes32)": FunctionFragment;
    "getRequestQueueLengths()": FunctionFragment;
    "increasePositionRequestKeys(uint256)": FunctionFragment;
    "increasePositionRequestKeysStart()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "decreasePositionRequestKeys"
      | "decreasePositionRequestKeysStart"
      | "executeDecreasePositions"
      | "executeIncreasePositions"
      | "getDecreasePositionRequestPath"
      | "getIncreasePositionRequestPath"
      | "getRequestQueueLengths"
      | "increasePositionRequestKeys"
      | "increasePositionRequestKeysStart"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "decreasePositionRequestKeys",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "decreasePositionRequestKeysStart",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "executeDecreasePositions",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "executeIncreasePositions",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getDecreasePositionRequestPath",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "getIncreasePositionRequestPath",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "getRequestQueueLengths",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "increasePositionRequestKeys",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "increasePositionRequestKeysStart",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "decreasePositionRequestKeys",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "decreasePositionRequestKeysStart",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeDecreasePositions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeIncreasePositions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDecreasePositionRequestPath",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getIncreasePositionRequestPath",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRequestQueueLengths",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increasePositionRequestKeys",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increasePositionRequestKeysStart",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IPositionRouter extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IPositionRouterInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    decreasePositionRequestKeys(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    decreasePositionRequestKeysStart(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    executeDecreasePositions(
      _count: PromiseOrValue<BigNumberish>,
      _executionFeeReceiver: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    executeIncreasePositions(
      _count: PromiseOrValue<BigNumberish>,
      _executionFeeReceiver: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getDecreasePositionRequestPath(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    getIncreasePositionRequestPath(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    getRequestQueueLengths(
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>;

    increasePositionRequestKeys(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    increasePositionRequestKeysStart(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;
  };

  decreasePositionRequestKeys(
    index: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  decreasePositionRequestKeysStart(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  executeDecreasePositions(
    _count: PromiseOrValue<BigNumberish>,
    _executionFeeReceiver: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  executeIncreasePositions(
    _count: PromiseOrValue<BigNumberish>,
    _executionFeeReceiver: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getDecreasePositionRequestPath(
    _key: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getIncreasePositionRequestPath(
    _key: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getRequestQueueLengths(
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>;

  increasePositionRequestKeys(
    index: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  increasePositionRequestKeysStart(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  callStatic: {
    decreasePositionRequestKeys(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    decreasePositionRequestKeysStart(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    executeDecreasePositions(
      _count: PromiseOrValue<BigNumberish>,
      _executionFeeReceiver: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    executeIncreasePositions(
      _count: PromiseOrValue<BigNumberish>,
      _executionFeeReceiver: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    getDecreasePositionRequestPath(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getIncreasePositionRequestPath(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getRequestQueueLengths(
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber, BigNumber]>;

    increasePositionRequestKeys(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    increasePositionRequestKeysStart(
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    decreasePositionRequestKeys(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    decreasePositionRequestKeysStart(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    executeDecreasePositions(
      _count: PromiseOrValue<BigNumberish>,
      _executionFeeReceiver: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    executeIncreasePositions(
      _count: PromiseOrValue<BigNumberish>,
      _executionFeeReceiver: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getDecreasePositionRequestPath(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getIncreasePositionRequestPath(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRequestQueueLengths(overrides?: CallOverrides): Promise<BigNumber>;

    increasePositionRequestKeys(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    increasePositionRequestKeysStart(
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    decreasePositionRequestKeys(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    decreasePositionRequestKeysStart(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    executeDecreasePositions(
      _count: PromiseOrValue<BigNumberish>,
      _executionFeeReceiver: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    executeIncreasePositions(
      _count: PromiseOrValue<BigNumberish>,
      _executionFeeReceiver: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getDecreasePositionRequestPath(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getIncreasePositionRequestPath(
      _key: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRequestQueueLengths(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    increasePositionRequestKeys(
      index: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    increasePositionRequestKeysStart(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
